{"id":"src/index.ts","dependencies":[{"name":"D:\\z\\UDEMY\\TS\\Web\\package.json","includedInParent":true,"mtime":1680592756675},{"name":"./models/User","loc":{"line":3,"column":21,"index":98},"parent":"D:\\z\\UDEMY\\TS\\Web\\src\\index.ts","resolved":"D:\\z\\UDEMY\\TS\\Web\\src\\models\\User.ts"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar User_1 = require(\"./models/User\");\nvar user = User_1.User.buildUser({\n  id: 1\n});\nuser.on('change', function () {\n  console.log(user);\n});\nuser.fetch();\n//user.set({ name: 'New Name'})\n//on is on function from the eventing class, we are getting back a reference to the method on the eventing class\n/* user.on('change', () => { //the parentheses invoke function this.events.on\n  console.log('user was changed')\n}) */\n//reminder on how 'this' works in JS\n// const colors = {\n//   color: 'red',\n//   printColor() {\n//     console.log(this.color) //this is equal to whatever is to the left of our function call printColor()\n//   }\n// }\n// const printColor = colors.printColor;\n// printColor() //there is nothing in left => undefined"},"sourceMaps":{"js":{"mappings":[{"source":"src/index.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":4}},{"source":"src/index.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":10}},{"source":"src/index.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":13}},{"source":"src/index.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":20}},{"source":"src/index.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":21}},{"source":"src/index.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":36}},{"source":"src/index.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":37}},{"source":"src/index.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":7,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":3,"column":6},"generated":{"line":7,"column":4}},{"source":"src/index.ts","name":null,"original":{"line":3,"column":10},"generated":{"line":7,"column":8}},{"source":"src/index.ts","name":null,"original":{"line":3,"column":13},"generated":{"line":7,"column":11}},{"source":"src/index.ts","name":null,"original":{"line":3,"column":13},"generated":{"line":7,"column":17}},{"source":"src/index.ts","name":null,"original":{"line":3,"column":13},"generated":{"line":7,"column":18}},{"source":"src/index.ts","name":null,"original":{"line":3,"column":17},"generated":{"line":7,"column":22}},{"source":"src/index.ts","name":null,"original":{"line":3,"column":18},"generated":{"line":7,"column":23}},{"source":"src/index.ts","name":null,"original":{"line":3,"column":27},"generated":{"line":7,"column":32}},{"source":"src/index.ts","name":null,"original":{"line":3,"column":28},"generated":{"line":7,"column":33}},{"source":"src/index.ts","name":null,"original":{"line":3,"column":30},"generated":{"line":8,"column":2}},{"source":"src/index.ts","name":null,"original":{"line":3,"column":32},"generated":{"line":8,"column":4}},{"source":"src/index.ts","name":null,"original":{"line":3,"column":34},"generated":{"line":8,"column":6}},{"source":"src/index.ts","name":null,"original":{"line":3,"column":35},"generated":{"line":9,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":3,"column":36},"generated":{"line":9,"column":1}},{"source":"src/index.ts","name":null,"original":{"line":3,"column":37},"generated":{"line":9,"column":2}},{"source":"src/index.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":10,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":5,"column":4},"generated":{"line":10,"column":4}},{"source":"src/index.ts","name":null,"original":{"line":5,"column":5},"generated":{"line":10,"column":5}},{"source":"src/index.ts","name":null,"original":{"line":5,"column":7},"generated":{"line":10,"column":7}},{"source":"src/index.ts","name":null,"original":{"line":5,"column":8},"generated":{"line":10,"column":8}},{"source":"src/index.ts","name":null,"original":{"line":5,"column":16},"generated":{"line":10,"column":16}},{"source":"src/index.ts","name":null,"original":{"line":5,"column":18},"generated":{"line":10,"column":18}},{"source":"src/index.ts","name":null,"original":{"line":5,"column":18},"generated":{"line":10,"column":30}},{"source":"src/index.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":11,"column":2}},{"source":"src/index.ts","name":null,"original":{"line":6,"column":9},"generated":{"line":11,"column":9}},{"source":"src/index.ts","name":null,"original":{"line":6,"column":10},"generated":{"line":11,"column":10}},{"source":"src/index.ts","name":null,"original":{"line":6,"column":13},"generated":{"line":11,"column":13}},{"source":"src/index.ts","name":null,"original":{"line":6,"column":14},"generated":{"line":11,"column":14}},{"source":"src/index.ts","name":null,"original":{"line":6,"column":18},"generated":{"line":11,"column":18}},{"source":"src/index.ts","name":null,"original":{"line":6,"column":19},"generated":{"line":11,"column":19}},{"source":"src/index.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":12,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":7,"column":1},"generated":{"line":12,"column":1}},{"source":"src/index.ts","name":null,"original":{"line":7,"column":2},"generated":{"line":12,"column":2}},{"source":"src/index.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":13,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":13,"column":4}},{"source":"src/index.ts","name":null,"original":{"line":9,"column":5},"generated":{"line":13,"column":5}},{"source":"src/index.ts","name":null,"original":{"line":9,"column":10},"generated":{"line":13,"column":10}},{"source":"src/index.ts","name":null,"original":{"line":9,"column":12},"generated":{"line":13,"column":12}},{"source":"src/index.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":14,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":27,"column":0},"generated":{"line":26,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":28,"column":0},"generated":{"line":27,"column":0}}],"sources":{"src/index.ts":"import { User } from \"./models/User\";\r\n\r\nconst user = User.buildUser({ id: 1});\r\n\r\nuser.on('change', () => {\r\n  console.log(user)\r\n})\r\n\r\nuser.fetch()\r\n\r\n//user.set({ name: 'New Name'})\r\n\r\n//on is on function from the eventing class, we are getting back a reference to the method on the eventing class\r\n\r\n/* user.on('change', () => { //the parentheses invoke function this.events.on\r\n  console.log('user was changed')\r\n}) */\r\n\r\n//reminder on how 'this' works in JS\r\n// const colors = {\r\n//   color: 'red',\r\n//   printColor() {\r\n//     console.log(this.color) //this is equal to whatever is to the left of our function call printColor()\r\n//   }\r\n// }\r\n\r\n// const printColor = colors.printColor;\r\n// printColor() //there is nothing in left => undefined"},"lineCount":null}},"error":null,"hash":"bb5b65a1489593ddabe8d5075bdaee9d","cacheData":{"env":{}}}